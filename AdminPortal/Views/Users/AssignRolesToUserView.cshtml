@model UserRolesViewModel

@inject IUnitOfWork _unitOfWork

@{
    if (Model is not null)
    {
        var user = await _unitOfWork.UserRolesRepository.GetAllUserRoles(@Model.Userid);
    }
}

<br />
@if (User.IsInRole(Roles.SuperAdmin))
{
    <div class="card border border-dark p-1">
        <div class="card-header bg-dark" style="color:white"><h3>Select Roles <i class="fa fa-User"></i></h3></div>
        <br />
        @if (Model is null)
        {
            <div class="alert alert-danger">
                @TempData["AllRolesAssigned"]
            </div>
            <br />
        }
        else
        {
            <form asp-controller="Users" asp-action="AssignRolesToUser"
          asp-route-userId="@Model.Userid">
                <table class="table table-striped" width="100%" id="CourseEnrolTable">
                    <thead>
                        <tr>
                            <th style="color:black;">Roles</th>
                            <th style="color:black;">Select</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var role in Model.RolesNotAssignedToUser)
                        {
                            <tr>
                                <td>@role</td>
                                <td>@Html.CheckBoxFor(model => model.RolesSelected[role])</td>
                            </tr>
                        }
                    </tbody>
                </table>
                <br />
                <button type="submit" onclick="AssignRolesToUser()" class="btn btn-success btn-block">
                    <i class="fa fa-user"></i> Assign Roles
                </button>
            </form>
        }
    </div>
    <br />
    <div class="card border border-dark p-1">
        <a asp-controller="Users" asp-action="Index" class="btn btn-info btn-block mb-1">
            <i class="fa fa-users"></i> Back to Users Page
        </a>
    </div>
}

